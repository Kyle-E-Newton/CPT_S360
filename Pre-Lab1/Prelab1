 Case  | a.out |  TEXT  |  DATA  |  BSS   |
--------------------------------------------
 (1)   | 7236  | 1507   | 304    | 8      |
--------------------------------------------
 (2)   | 7240  | 1507   | 308    | 4      |
--------------------------------------------
 (3)   | 7236  | 1507   | 304    | 40032  |
--------------------------------------------
 (4)   | 47260 | 1507   | 40328  | 4      |
--------------------------------------------
 (5)   | 7316  | 1710   | 308    | 8      |
--------------------------------------------
 (6)   | 7328  | 1523   | 304    | 40068  |
--------------------------------------------

ANSWER THESE QUESTIONS:

   1. Variables in C may be classified as

          globals ---|--- UNINITIALIZED  globals;
                     |---   INITIALIZED  globals;

          locals  ---|--- AUTOMATIC locals;
                     |--- STATIC    locals;

   In terms of the above classification and the variables g, a, b, c, d,

      Which variables are in DATA? Any global or static variables, which is anything not defined in a function, or are static
      Which variables are in BSS ? Variables that are initialized to 0 or do not have explicit initialization

   2. In terms of the TEXT, DATA and BSS sections,
      Which sections are in a.out, which section is NOT in a.out? 
      WHY? Just TEXT and DATA. However, the BSS section only stores the size in the a.out file. This is because the loader needs to take the segments and map them in memory.

  (B). For each case, use   cc -m32 -static t.c   to generate a.out.
       Record the sizes again and compare them with the sizes in (A).
       WHAT DO YOU SEE?

 Case  | a.out |  TEXT  |  DATA  |  BSS   |
--------------------------------------------
 (1)   | 657628| 581866 | 11264  | 3344   |
--------------------------------------------
 (2)   | 657628| 581866 | 11264  | 3344   |
--------------------------------------------
 (3)   | 657628| 581866 | 11264  | 43344  |
--------------------------------------------
 (4)   | 697660| 581866 | 51296  | 3344   |
--------------------------------------------
 (5)   | 657628| 581914 | 11264  | 3344   |
--------------------------------------------
 (6)   | 657720| 581882 | 11264  | 43376  |
--------------------------------------------

       WHY?
       Because with static we override dynamic linking, which means all things need to be included in the out file. Therefore there is a larger amount of data in the file as the include is necessary.

*************************LOCAL VARIABLES*********************************************
enter main
&argc=ffcbd570 argv=ffcbd604 env=ffcbd60c
&a=ffcbd530 &b=ffcbd534 &c=ffcbd538
enter A
&d=-3418896 &e=-3418892 &f=-3418888
enter B
&g=-3418944 &h=-3418940 &i=-3418936
enter C
&u=-3419008 &v=-3419004 &w=-3419000 &i=-3418996 &p=-3418992
*************************PARAMETERS*********************************************
Print Stack
Bottom of Stack
ffcbd480: ffcbd480
ffcbd484: ffcbd484
ffcbd488: ffcbd488
ffcbd48c: ffcbd48c
ffcbd490: ffcbd490
ffcbd494: ffcbd494
ffcbd498: ffcbd498
ffcbd49c: ffcbd49c
ffcbd4a0: ffcbd4a0
ffcbd4a4: ffcbd4a4
ffcbd4a8: ffcbd4a8
ffcbd4ac: ffcbd4ac
ffcbd4b0: ffcbd4b0
ffcbd4b4: ffcbd4b4
ffcbd4b8: ffcbd4b8
ffcbd4bc: ffcbd4bc
ffcbd4c0: ffcbd4c0
ffcbd4c4: ffcbd4c4
ffcbd4c8: ffcbd4c8
ffcbd4cc: ffcbd4cc
ffcbd4d0: ffcbd4d0
ffcbd4d4: ffcbd4d4
ffcbd4d8: ffcbd4d8
ffcbd4dc: ffcbd4dc
ffcbd4e0: ffcbd4e0
ffcbd4e4: ffcbd4e4
ffcbd4e8: ffcbd4e8
ffcbd4ec: ffcbd4ec
ffcbd4f0: ffcbd4f0
ffcbd4f4: ffcbd4f4
ffcbd4f8: ffcbd4f8
ffcbd4fc: ffcbd4fc
ffcbd500: ffcbd500
ffcbd504: ffcbd504
ffcbd508: ffcbd508
ffcbd50c: ffcbd50c
ffcbd510: ffcbd510
ffcbd514: ffcbd514
ffcbd518: ffcbd518
ffcbd51c: ffcbd51c
ffcbd520: ffcbd520
ffcbd524: ffcbd524
ffcbd528: ffcbd528
ffcbd52c: ffcbd52c
ffcbd530: ffcbd530
ffcbd534: ffcbd534
ffcbd538: ffcbd538
ffcbd53c: ffcbd53c
ffcbd540: ffcbd540
ffcbd544: ffcbd544
ffcbd548: ffcbd548
ffcbd54c: ffcbd54c
ffcbd550: ffcbd550
ffcbd554: ffcbd554
ffcbd558: ffcbd558
ffcbd55c: ffcbd55c
ffcbd560: ffcbd560
ffcbd564: ffcbd564
ffcbd568: ffcbd568
ffcbd56c: ffcbd56c
ffcbd570: ffcbd570
ffcbd574: ffcbd574
ffcbd578: ffcbd578
ffcbd57c: ffcbd57c
ffcbd580: ffcbd580
ffcbd584: ffcbd584
ffcbd588: ffcbd588
ffcbd58c: ffcbd58c
ffcbd590: ffcbd590
ffcbd594: ffcbd594
ffcbd598: ffcbd598
ffcbd59c: ffcbd59c
ffcbd5a0: ffcbd5a0
ffcbd5a4: ffcbd5a4
ffcbd5a8: ffcbd5a8
ffcbd5ac: ffcbd5ac
ffcbd5b0: ffcbd5b0
ffcbd5b4: ffcbd5b4
ffcbd5b8: ffcbd5b8
ffcbd5bc: ffcbd5bc
ffcbd5c0: ffcbd5c0
ffcbd5c4: ffcbd5c4
ffcbd5c8: ffcbd5c8
ffcbd5cc: ffcbd5cc
ffcbd5d0: ffcbd5d0
ffcbd5d4: ffcbd5d4
ffcbd5d8: ffcbd5d8
ffcbd5dc: ffcbd5dc
ffcbd5e0: ffcbd5e0
ffcbd5e4: ffcbd5e4
ffcbd5e8: ffcbd5e8
ffcbd5ec: ffcbd5ec
ffcbd5f0: ffcbd5f0
ffcbd5f4: ffcbd5f4
ffcbd5f8: ffcbd5f8
ffcbd5fc: ffcbd5fc
ffcbd600: ffcbd600
ffcbd604: ffcbd604
ffcbd608: ffcbd608
ffcbd60c: ffcbd60c
ffcbd610: ffcbd610
ffcbd614: ffcbd614
ffcbd618: ffcbd618
ffcbd61c: ffcbd61c
ffcbd620: ffcbd620
ffcbd624: ffcbd624
ffcbd628: ffcbd628
ffcbd62c: ffcbd62c
ffcbd630: ffcbd630
ffcbd634: ffcbd634
ffcbd638: ffcbd638
ffcbd63c: ffcbd63c
ffcbd640: ffcbd640
ffcbd644: ffcbd644
ffcbd648: ffcbd648
ffcbd64c: ffcbd64c
ffcbd650: ffcbd650
ffcbd654: ffcbd654
ffcbd658: ffcbd658
ffcbd65c: ffcbd65c
ffcbd660: ffcbd660
ffcbd664: ffcbd664
ffcbd668: ffcbd668
ffcbd66c: ffcbd66c
ffcbd670: ffcbd670
ffcbd674: ffcbd674
ffcbd678: ffcbd678
ffcbd67c: ffcbd67c
Top of Stack
exit B
exit A
exit main
